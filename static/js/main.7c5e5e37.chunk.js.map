{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","setMovies","useState","query","setQuery","setMovie","error","setError","spinner","setSpinner","onSubmit","event","preventDefault","fetch","then","res","json","catch","Response","Error","getMovie","loadedMovie","undefined","url","Poster","preparedMovie","Title","Plot","imdbID","finally","htmlFor","value","onChange","target","type","id","placeholder","classNames","disabled","length","onClick","current","find","curMovie","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7c5e5e37.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => {\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbId}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\n\ntype Props = {\n  setMovies: React.Dispatch<React.SetStateAction<Movie[]>>\n};\n\nexport const FindMovie: React.FC<Props> = ({ setMovies }) => {\n  const [query, setQuery] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [error, setError] = useState(false);\n  const [spinner, setSpinner] = useState(false);\n\n  const onSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    getMovie(query)\n      .then(loadedMovie => {\n        if (loadedMovie === undefined || 'Error' in loadedMovie) {\n          setError(true);\n          setSpinner(false);\n\n          return;\n        }\n\n        let url = loadedMovie.Poster;\n\n        if (loadedMovie.Poster === '') {\n          url = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n        }\n\n        const preparedMovie = {\n          title: loadedMovie.Title,\n          description: loadedMovie.Plot,\n          imgUrl: url,\n          imdbUrl: `https://www.imdb.com/title/${loadedMovie.imdbID}/`,\n          imdbId: loadedMovie.imdbID,\n        };\n\n        setMovie(preparedMovie);\n      })\n      .finally(() => setSpinner(false));\n    setError(false);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={onSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              value={query}\n              onChange={event => {\n                setError(false);\n                setQuery(event.target.value);\n              }}\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            {movie ? (\n              <button\n                data-cy=\"searchButton\"\n                type=\"submit\"\n                className={classNames(\n                  'button',\n                  'is-ligth',\n                  {\n                    'is-loading': spinner,\n                  },\n                )}\n                disabled={query.length === 0}\n                onClick={() => setSpinner(true)}\n              >\n                Search again\n              </button>\n            ) : (\n              <button\n                data-cy=\"searchButton\"\n                type=\"submit\"\n                className={classNames(\n                  'button',\n                  'is-ligth',\n                  {\n                    'is-loading': spinner,\n                  },\n                )}\n                disabled={query.length === 0}\n                onClick={() => setSpinner(true)}\n              >\n                Find a movie\n              </button>\n            )}\n\n          </div>\n          {movie !== null && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => {\n                  setMovies(current => {\n                    if (current\n                      .find(curMovie => curMovie.imdbId === movie.imdbId)) {\n                      setMovie(null);\n\n                      return [...current];\n                    }\n\n                    return [...current, movie];\n                  });\n                  setQuery('');\n                  setMovie(null);\n                }}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          {movie && <MovieCard movie={movie} />}\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=a4ce75c0';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie setMovies={setMovies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}